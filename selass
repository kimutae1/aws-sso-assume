#!/bin/sh

ACCOUNT_FILE="/bin/accounts.json"

account_names=$(jq -r 'keys[]' "$ACCOUNT_FILE")
account_ids=$(jq -r '.[keys[]]' "$ACCOUNT_FILE")

names_arr=$(echo "$account_names")
ids_arr=$(echo "$account_ids")

echo "계정을 선택해주세요:"
echo "------------------------"

i=1
echo "$names_arr" | while read -r name; do
  id=$(jq -r --arg n "$name" '.[$n]' "$ACCOUNT_FILE")
  echo "$i) $name ($id)"
  i=$((i + 1))
done

echo "------------------------"
printf "번호 입력: "
read selection

selected_name=$(echo "$names_arr" | sed -n "${selection}p")
selected_id=$(jq -r --arg n "$selected_name" '.[$n]' "$ACCOUNT_FILE")

if [ -z "$selected_name" ] || [ -z "$selected_id" ]; then
  echo "잘못된 선택입니다."
  return 1
fi

echo ""
echo "선택된 계정:"
echo "이름: $selected_name"
echo "ID: $selected_id"

# assume-role 실행 및 환경변수 적용
#unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN

selected_id=$(echo $selected_id)
export ROLE_ARN="arn:aws:iam::${selected_id}:role/OrganizationAccountAccessRole"
export ROLE_SESSION_NAME="new_session" # 세션 이름

# Assume Role을 통해 임시 자격 증명 얻기
CREDENTIALS=$(aws sts assume-role \
  --role-arn "$ROLE_ARN" \
  --role-session-name "$ROLE_SESSION_NAME" \
  --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
  --output text)

# 임시 자격 증명을 환경 변수에 설정
export AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | awk '{print $1}')
export AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | awk '{print $2}')
export AWS_SESSION_TOKEN=$(echo $CREDENTIALS | awk '{print $3}')

aws sts get-caller-identity | jq
